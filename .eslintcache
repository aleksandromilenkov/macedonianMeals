[{"C:\\Users\\Aleksandro\\Desktop\\React MAX Course 2022\\FoodOrderApp\\src\\index.js":"1","C:\\Users\\Aleksandro\\Desktop\\React MAX Course 2022\\FoodOrderApp\\src\\App.js":"2","C:\\Users\\Aleksandro\\Desktop\\React MAX Course 2022\\FoodOrderApp\\src\\components\\Layout\\Header.js":"3","C:\\Users\\Aleksandro\\Desktop\\React MAX Course 2022\\FoodOrderApp\\src\\components\\Layout\\HeaderCartButton.js":"4","C:\\Users\\Aleksandro\\Desktop\\React MAX Course 2022\\FoodOrderApp\\src\\components\\Cart\\CartIcon.js":"5","C:\\Users\\Aleksandro\\Desktop\\React MAX Course 2022\\FoodOrderApp\\src\\components\\Meals\\Meals.js":"6","C:\\Users\\Aleksandro\\Desktop\\React MAX Course 2022\\FoodOrderApp\\src\\components\\Meals\\MealsSummary.js":"7","C:\\Users\\Aleksandro\\Desktop\\React MAX Course 2022\\FoodOrderApp\\src\\components\\Meals\\AvailableMeals.js":"8","C:\\Users\\Aleksandro\\Desktop\\React MAX Course 2022\\FoodOrderApp\\src\\components\\UI\\Card.js":"9","C:\\Users\\Aleksandro\\Desktop\\React MAX Course 2022\\FoodOrderApp\\src\\components\\Meals\\MealItem\\MealItem.js":"10","C:\\Users\\Aleksandro\\Desktop\\React MAX Course 2022\\FoodOrderApp\\src\\components\\Meals\\MealItem\\MealItemForm.js":"11","C:\\Users\\Aleksandro\\Desktop\\React MAX Course 2022\\FoodOrderApp\\src\\components\\UI\\Input.js":"12","C:\\Users\\Aleksandro\\Desktop\\React MAX Course 2022\\FoodOrderApp\\src\\components\\Cart\\Cart.js":"13","C:\\Users\\Aleksandro\\Desktop\\React MAX Course 2022\\FoodOrderApp\\src\\components\\UI\\Modal.js":"14","C:\\Users\\Aleksandro\\Desktop\\React MAX Course 2022\\FoodOrderApp\\src\\store\\CartProvider.js":"15","C:\\Users\\Aleksandro\\Desktop\\React MAX Course 2022\\FoodOrderApp\\src\\store\\cart-context.js":"16","C:\\Users\\Aleksandro\\Desktop\\React MAX Course 2022\\FoodOrderApp\\src\\components\\Cart\\CartItem.js":"17","C:\\Users\\Aleksandro\\Desktop\\React MAX Course 2022\\FoodOrderApp\\src\\components\\Cart\\Checkout.js":"18"},{"size":141,"mtime":1673282857287,"results":"19","hashOfConfig":"20"},{"size":653,"mtime":1673283566094,"results":"21","hashOfConfig":"20"},{"size":569,"mtime":1676542863938,"results":"22","hashOfConfig":"20"},{"size":1069,"mtime":1674067077383,"results":"23","hashOfConfig":"20"},{"size":501,"mtime":1673192884304,"results":"24","hashOfConfig":"20"},{"size":268,"mtime":1673194103155,"results":"25","hashOfConfig":"20"},{"size":574,"mtime":1673372920575,"results":"26","hashOfConfig":"20"},{"size":1767,"mtime":1676557882159,"results":"27","hashOfConfig":"20"},{"size":191,"mtime":1673194738305,"results":"28","hashOfConfig":"20"},{"size":840,"mtime":1676544819842,"results":"29","hashOfConfig":"20"},{"size":1070,"mtime":1673294714515,"results":"30","hashOfConfig":"20"},{"size":323,"mtime":1673294121297,"results":"31","hashOfConfig":"20"},{"size":3268,"mtime":1676573591139,"results":"32","hashOfConfig":"20"},{"size":745,"mtime":1673992510825,"results":"33","hashOfConfig":"20"},{"size":2556,"mtime":1673373883786,"results":"34","hashOfConfig":"20"},{"size":283,"mtime":1673373844921,"results":"35","hashOfConfig":"20"},{"size":635,"mtime":1673366122464,"results":"36","hashOfConfig":"20"},{"size":3457,"mtime":1676571966731,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1wgyyj9",{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Aleksandro\\Desktop\\React MAX Course 2022\\FoodOrderApp\\src\\index.js",[],["77","78"],"C:\\Users\\Aleksandro\\Desktop\\React MAX Course 2022\\FoodOrderApp\\src\\App.js",[],"C:\\Users\\Aleksandro\\Desktop\\React MAX Course 2022\\FoodOrderApp\\src\\components\\Layout\\Header.js",[],"C:\\Users\\Aleksandro\\Desktop\\React MAX Course 2022\\FoodOrderApp\\src\\components\\Layout\\HeaderCartButton.js",[],"C:\\Users\\Aleksandro\\Desktop\\React MAX Course 2022\\FoodOrderApp\\src\\components\\Cart\\CartIcon.js",[],"C:\\Users\\Aleksandro\\Desktop\\React MAX Course 2022\\FoodOrderApp\\src\\components\\Meals\\Meals.js",[],"C:\\Users\\Aleksandro\\Desktop\\React MAX Course 2022\\FoodOrderApp\\src\\components\\Meals\\MealsSummary.js",[],"C:\\Users\\Aleksandro\\Desktop\\React MAX Course 2022\\FoodOrderApp\\src\\components\\Meals\\AvailableMeals.js",["79"],"import React, { useState, useEffect, useCallback } from \"react\";\r\nimport Card from \"../UI/Card\";\r\nimport classes from \"./AvailableMeals.module.css\";\r\nimport MealItem from \"./MealItem/MealItem\";\r\n\r\nconst AvailableMeals = () => {\r\n  const [meals, setMeals] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  useEffect(() => {\r\n    const fetchMeals = async () => {\r\n      const resp = await fetch(\r\n        \"https://react-http-max-f7bf6-default-rtdb.firebaseio.com/meals.json\"\r\n      );\r\n      if (!resp.ok) {\r\n        throw new Error(\"Can not fetch data.\");\r\n      }\r\n      const data = await resp.json();\r\n      let niza = [];\r\n      for (const key in data) {\r\n        niza.push({\r\n          id: key,\r\n          name: data[key].name,\r\n          description: data[key].description,\r\n          price: data[key].price,\r\n        });\r\n      }\r\n      setMeals(niza);\r\n      setIsLoading(false);\r\n    };\r\n    fetchMeals().catch((err) => {\r\n      setError(err.message);\r\n      setIsLoading(false);\r\n    });\r\n  }, []);\r\n  const mealsList = meals.map((meal, idx) => {\r\n    return (\r\n      <MealItem\r\n        id={meal.id}\r\n        key={idx}\r\n        name={meal.name}\r\n        price={meal.price}\r\n        description={meal.description}\r\n      />\r\n    );\r\n  });\r\n\r\n  let content = <ul>{mealsList}</ul>;\r\n  if (isLoading)\r\n    return (\r\n      <section className={classes.mealsLoading}>\r\n        <p>Loading...</p>\r\n      </section>\r\n    );\r\n  if (error) {\r\n    return (\r\n      <section className={classes.mealsError}>\r\n        <p>{error}</p>\r\n      </section>\r\n    );\r\n  }\r\n  return (\r\n    <section className={classes.meals}>\r\n      <Card>{content}</Card>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default AvailableMeals;\r\n","C:\\Users\\Aleksandro\\Desktop\\React MAX Course 2022\\FoodOrderApp\\src\\components\\UI\\Card.js",[],"C:\\Users\\Aleksandro\\Desktop\\React MAX Course 2022\\FoodOrderApp\\src\\components\\Meals\\MealItem\\MealItem.js",[],"C:\\Users\\Aleksandro\\Desktop\\React MAX Course 2022\\FoodOrderApp\\src\\components\\Meals\\MealItem\\MealItemForm.js",[],"C:\\Users\\Aleksandro\\Desktop\\React MAX Course 2022\\FoodOrderApp\\src\\components\\UI\\Input.js",[],"C:\\Users\\Aleksandro\\Desktop\\React MAX Course 2022\\FoodOrderApp\\src\\components\\Cart\\Cart.js",["80"],"import CartContext from \"../../store/cart-context\";\r\nimport Modal from \"../UI/Modal\";\r\nimport classes from \"./Cart.module.css\";\r\nimport { useContext, useState } from \"react\";\r\nimport CartItem from \"./CartItem\";\r\nimport Checkout from \"./Checkout\";\r\nconst Cart = (props) => {\r\n  const [isCheckout, setIsCheckout] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [showSuccess, setShowSuccess] = useState(false);\r\n  const ctx = useContext(CartContext);\r\n  const hasItems = ctx.items.length > 0;\r\n  const cartItemRemoveHandler = (id) => {\r\n    ctx.removeItem(id);\r\n  };\r\n  const cartItemAddHandler = (item) => {\r\n    ctx.addItem({ ...item, amount: 1 });\r\n  };\r\n  const onClearCart = () => {\r\n    ctx.cartClear();\r\n  };\r\n  const cartItems = (\r\n    <ul className={classes[\"cart-items\"]}>\r\n      {ctx.items.map((item) => (\r\n        <CartItem\r\n          key={Math.random()}\r\n          name={item.name}\r\n          price={item.price}\r\n          amount={item.amount}\r\n          onRemove={cartItemRemoveHandler.bind(null, item.id)}\r\n          onAdd={cartItemAddHandler.bind(null, item)}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n\r\n  const orderHandler = () => {\r\n    setIsCheckout(true);\r\n  };\r\n\r\n  const cancelOrderHandler = () => {\r\n    props.onClose();\r\n    setIsCheckout(false);\r\n  };\r\n\r\n  const submitOrderHandler = async (userData) => {\r\n    setIsLoading(true);\r\n    const resp = await fetch(\r\n      \"https://react-http-max-f7bf6-default-rtdb.firebaseio.com/orders.json\",\r\n      {\r\n        method: \"POST\",\r\n        body: JSON.stringify({\r\n          user: userData,\r\n          orderedItems: ctx.items,\r\n        }),\r\n      }\r\n    );\r\n\r\n    setIsLoading(false);\r\n    setShowSuccess(true);\r\n    onClearCart();\r\n  };\r\n  const content = (\r\n    <>\r\n      {cartItems}\r\n      <div className={classes.total}>\r\n        <span>Total Amount</span>\r\n        <span>${ctx.totalAmount.toFixed(2)}</span>\r\n      </div>\r\n      {isCheckout ? (\r\n        <Checkout\r\n          closeForm={() => setIsCheckout(false)}\r\n          onCancel={cancelOrderHandler}\r\n          onConfirm={submitOrderHandler}\r\n        />\r\n      ) : (\r\n        <div className={classes.actions}>\r\n          {ctx.totalAmount > 1 && (\r\n            <button className={classes[\"button--alt\"]} onClick={onClearCart}>\r\n              Clear Cart\r\n            </button>\r\n          )}\r\n          <button className={classes[\"button--alt\"]} onClick={props.onClose}>\r\n            Close\r\n          </button>\r\n          {hasItems ? (\r\n            <button className={classes.button} onClick={orderHandler}>\r\n              Order\r\n            </button>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n  const isLoadingContent = <p>Sending order data...</p>;\r\n\r\n  const isSuccessContent = (\r\n    <>\r\n      <p>Successfully sent the order!</p>\r\n      <div className={classes.actions}>\r\n        <button className={classes.button} onClick={props.onClose}>\r\n          Close\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <Modal onClose={props.onClose}>\r\n      {!isLoading && !showSuccess && content}\r\n      {isLoading && !showSuccess && isLoadingContent}\r\n      {!isLoading && showSuccess && isSuccessContent}\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n","C:\\Users\\Aleksandro\\Desktop\\React MAX Course 2022\\FoodOrderApp\\src\\components\\UI\\Modal.js",[],"C:\\Users\\Aleksandro\\Desktop\\React MAX Course 2022\\FoodOrderApp\\src\\store\\CartProvider.js",[],"C:\\Users\\Aleksandro\\Desktop\\React MAX Course 2022\\FoodOrderApp\\src\\store\\cart-context.js",[],"C:\\Users\\Aleksandro\\Desktop\\React MAX Course 2022\\FoodOrderApp\\src\\components\\Cart\\CartItem.js",[],"C:\\Users\\Aleksandro\\Desktop\\React MAX Course 2022\\FoodOrderApp\\src\\components\\Cart\\Checkout.js",[],{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":1,"column":38,"nodeType":"87","messageId":"88","endLine":1,"endColumn":49},{"ruleId":"85","severity":1,"message":"89","line":48,"column":11,"nodeType":"87","messageId":"88","endLine":48,"endColumn":15},"no-native-reassign",["90"],"no-negated-in-lhs",["91"],"no-unused-vars","'useCallback' is defined but never used.","Identifier","unusedVar","'resp' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]